{% extends 'base.html.twig' %}

{% block body %}
    {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
    {{ form_errors(form) }}

    {{ form_row(form.date) }}
    {{ form_row(form.amount) }}
    {{ form_row(form.sellCurrency) }}

    <p class="text-right">
        <button id="swapCurrencies" type="button" class="btn btn-default btn-xs">
            <span class="glyphicon glyphicon-sort" aria-hidden="true"></span> Sukeisti valiutÄ… vietomis
        </button>
    </p>

    {{ form_row(form.buyCurrency) }}
    {{ form_widget(form._token) }}

    <div class="form-group">
        <label class="control-label required" for="result">Rezultatas</label>
        <div id="result">
            <span id="money"></span> <span id="currencyCode"></span> <span id="message"></span>
        </div>
    </div>

    {{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">

        $( document ).ready(function() {

            $( ".calculate-select" ).change(function() {
                calculate();
            });
            $( "#swapCurrencies").click(function(){
                swapCurrencies();
            })
            $('.disable-enter').on('keydown', function(e) {
                disableEnter(e);
            });
            $('.allow-numbers').on('keyup', function(e) {
                replaceLetters();
                calculate();
            });
            $(".allow-numbers").bind({
                paste: function () {
                    replaceLetters();
                    calculate();
                }
            });
        });

        function calculate(){
            clearResultData();

            $.ajax({
                type: "POST",
                url: Routing.generate('convertCurrency'),
                data: {
                    date: $('#converter_date').val(),
                    amount: $('#converter_amount').val(),
                    currencySell: $('#converter_sellCurrency').val(),
                    currencyBuy: $('#converter_buyCurrency').val()
                }
            })
            .success(function( data ) {
                if (data.valid) {
                    $('#result>#money').html(data.amount);
                    $('#result>#currencyCode').html(data.currency);
                } else {
                    $('#result>#message').html(data.message);
                }
            });
        }

        function clearResultData() {
            $('#result span').html("");
        }

        function disableEnter(e){
            var code = e.keyCode || e.which;
            if (code == 13) {
                e.preventDefault();
                return false;
            }
        }

        function is_numeric(strString) {
            if (isNaN(strString)) {
                return false;
            }
            return true;
        }

        function replaceLetters(){
            var amount_input = $('#converter_amount');
            var amount = amount_input.val();
            if (!is_numeric(amount)) {
                amount = amount.replace(/[^\d.]/g, '');
                while (!is_numeric(amount)) {
                    amount = amount.slice(0, -1);
                }
                amount_input.val(amount);
            } else {
                if (amount < 0) {
                    amount = amount.replace(/[^\d.]/g, '');
                    amount_input.val(amount);
                }
            }
        }

        function swapCurrencies(){
            var valueSell = $('#converter_sellCurrency').val();
            $('#converter_sellCurrency').val($('#converter_buyCurrency').val());
            $('#converter_buyCurrency').val(valueSell);
            calculate();
        }
    </script>
{% endblock %}